(name 'MicroKanren-AdolfoPerezAlvarez.9' message 'Add syntactic sugar for creating variablesThe MKVar class #fresh: message accepts a block as argument, passing it as many distinct MKVar instances as there are arguments.' id '77f30336-fcdc-4500-9ab7-0e75cf685cd4' date '22 January 2015' time '2:38:06.146853 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.8' message 'Complete and simplify  MKCons <-> Collection conversionMake Collection -> MKCons conversion "flat" (don''t convert elements recursively).Implement MKCons -> Collection conversion.' id '38797def-7a1c-4b2c-bc2e-a89e0d08f07f' date '21 January 2015' time '11:52:02.416153 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.7' message 'OrderedCollection to MKCons conversionAdd method #asMKCons to convert OrderedCollections into MKCons chains.' id '8bbab229-77c2-4bd3-9d2b-60a63a0fe95b' date '21 January 2015' time '12:43:36.863032 am' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.6' message 'Implement variable and object reificationAdd a #reify: message that:	- For variables, answers the value of the variable in the given state (environment),	 	- for conses, reifies each of its components (head and tail), answering a cons of the reified values,		- for all other objects, answers the object itself ' id 'a3817c16-1ffd-4020-b835-f011e85a7e64' date '20 January 2015' time '11:43:44.227023 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.5' message 'Rename #unifyWith*:using: to #unifyWith*:on:' id 'a1d844f8-0ee5-4c4f-9d66-92b19cc972b7' date '20 January 2015' time '10:52:28.48299 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.4' message 'Categorize test methods and add some documentation' id 'a3731cfc-809e-4212-b226-bc5c281013c1' date '20 January 2015' time '10:48:50.014999 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.3' message 'Improve conses hash and minor refactoringsAdd a #size message to MKCons, and use the cons chain size to compute the hash.Remove empty test (a leftover of a manual rename) and source format MKCons>>unifyWithCons:using:' id '742685cd-e2bc-45d3-8707-a8d9772f996f' date '20 January 2015' time '3:24:05.053545 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.2' message 'Add conses and full unification implementationThis version finishes the implementation of unification. Now MicroKanren fully supports three kinds of elements:  - Variables, that act as placeholders for values. Will unify with elements of any kind.  - Conses, the only compound object supported by MicroKanren, unifies with variables and other conses.  - Objects, an arbitrary Pharo object (with the exception of vars and conses). Unify with variables and other objects (only if equal).' id 'f5d4cc29-2ad2-49d5-a5c7-4c45db8925f2' date '19 January 2015' time '11:26:53.116528 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.1' message 'Implement unification of variables and atomic objects. ' id '906526b8-226b-4871-b5ef-6c9a7c6c5b9f' date '18 January 2015' time '4:24:09.219532 pm' author 'AdolfoPerezAlvarez' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())