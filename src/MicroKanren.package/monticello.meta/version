(name 'MicroKanren-adolfopa.28' message 'Add bounded MK program executionImplement method to return a bounded result (i.e. return the first /n/ results).' id '139bcc32-0efe-4646-adc6-5ebecd1282ce' date '8 February 2015' time '3:30:45.833275 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.27' message 'Reify the results of running a program' id '997564e1-b520-4557-aa17-052382a1f95d' date '8 February 2015' time '2:17:07.746143 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.26' message 'SF - Use more descriptive variable names' id '36493551-c755-4d48-9aa6-2a9901cf1ddb' date '8 February 2015' time '2:04:50.362001 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.25' message 'Make  programs first class valuesMove all logic from then `MKProgram class>>run:` method into a `run` instance method.' id '5ff96c47-73a1-4ed6-95af-8befa70c8e47' date '8 February 2015' time '1:55:50.278261 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.24' message 'Add capability to run microKanren programs in the most basic wayAdd the MKProgram class to contain all logic related to running microKanren scripts.' id '3d68dd98-2673-42a5-917d-77254a30355c' date '7 February 2015' time '2:11:27.391222 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.23' message 'Avoid negating assert expressions and source formatInstead of asserting a negated expression, use #deny:Make all goal tests follow the same pattern.' id '57897889-03c1-4b34-b155-bd91d5150316' date '1 February 2015' time '12:19:42.472054 am' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.22' message 'Delay the evaluation of "conj"' id '324df2fc-f1d1-4197-ae40-648c78191eb6' date '1 February 2015' time '12:08:29.32525 am' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.21' message 'Implement "disj" goalAdd class MKDisjGoal with the implementation of the "disj" goal.Also, make MKGoal abstract; in the previous commit I forgot to remove the implementation of `#evaluateOn:`.' id 'ef7f5177-817b-4eca-b373-69cf0f15ddb6' date '1 February 2015' time '12:05:51.300929 am' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.20' message 'Make classes for "failure" and "success" goalsMove the logic of theses goals into subclasses , making MKGoal abstract.Also, categorize some uncategorized methods and update class comments.' id '2458f1cd-c00b-4da4-8edb-7bf897717c82' date '31 January 2015' time '11:47:36.363604 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.19' message 'Move "conj" goal logic into its own classMove all the logic of the "conj" goal into the MKConjGoal class.' id 'fdcccfc1-ffff-4971-8d48-74cc600966ff' date '31 January 2015' time '3:46:19.66124 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.18' message 'Create a goal class for unificationMove all logic for the unification goal into its own class. Also create a little syntactic sugar for unification (the #@@ message).' id '730554a5-bdf4-4b83-92d6-bd2beb806241' date '31 January 2015' time '3:34:10.453961 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.17' message 'Cleanup evaluation result class hierarchyMake MKEvaluationResult abstract, and create two subclasses to represent these different behaviours:  - MKSequencedEvaluationResult, a lazy stream of evaluation results.  - MKDelayedEvaluationResult, that contains a delayed computation that when evaluated, will return a MKEvaluationResult.' id 'daa6020d-ecb3-4d42-8980-d14fd3c5f843' date '31 January 2015' time '3:10:44.877851 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.16' message 'Add `success'' and `failure'' goals and refactor testsCreate two new goal to represent failure and success; use this new goals to simplify a little bit the tests.' id '92cae9af-518b-4c2e-87fc-a3a3f6bbe0a7' date '31 January 2015' time '2:29:03.281738 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.15' message 'Remove unused method and categorizeRemove the unused MKGoal#delayed: method and categorize  MKPlaceHolder#id.' id 'a412fc3d-a798-472e-8bb8-7d6aaa3d3137' date '31 January 2015' time '2:21:04.247584 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.14' message 'Implement  the "conj" combinatorThe /conj/ combinator returns the conjunction of two goals. Here, the #, message is used to "conj" two goals. The goal (g0, g1) will succeed iff both goals succeed.' id 'a2b64f8f-2587-4c18-8b10-a4935f9951d6' date '31 January 2015' time '2:15:01.325472 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.13' message 'Don''t use nil to represent the empty resultInstead of nil, use an instance of MKExecutionResult to represent the empty result. To differentiate an empty result from a non empty one, use the #isEmpty message.' id '410e9e73-9743-4c59-b3e2-c2ab2d095af3' date '31 January 2015' time '12:13:06.154417 am' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.12' message 'Fix class comments and minor source formattingMake class comments Markdown friendly by replacing spaces for tabs.Do some minor source formatting.' id '94c3bc80-b22e-4e88-ad55-4b6843ff5890' date '29 January 2015' time '11:49:56.143601 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.11' message 'Categorize unclassified methods' id '656b25d2-5ed0-4af2-bdc1-d50137367cc6' date '29 January 2015' time '11:37:40.189588 pm' author 'adolfopa' ancestors ((name 'MicroKanren-adolfopa.10' message 'Implement unification as a goal' id 'eb78c00f-9231-4deb-9fde-e66201ff7423' date '29 January 2015' time '11:27:20.227599 pm' author 'adolfopa' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.9' message 'Add syntactic sugar for creating variablesThe MKVar class #fresh: message accepts a block as argument, passing it as many distinct MKVar instances as there are arguments.' id '77f30336-fcdc-4500-9ab7-0e75cf685cd4' date '22 January 2015' time '2:38:06.146853 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.8' message 'Complete and simplify  MKCons <-> Collection conversionMake Collection -> MKCons conversion "flat" (don''t convert elements recursively).Implement MKCons -> Collection conversion.' id '38797def-7a1c-4b2c-bc2e-a89e0d08f07f' date '21 January 2015' time '11:52:02.416153 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.7' message 'OrderedCollection to MKCons conversionAdd method #asMKCons to convert OrderedCollections into MKCons chains.' id '8bbab229-77c2-4bd3-9d2b-60a63a0fe95b' date '21 January 2015' time '12:43:36.863032 am' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.6' message 'Implement variable and object reificationAdd a #reify: message that:	- For variables, answers the value of the variable in the given state (environment),	 	- for conses, reifies each of its components (head and tail), answering a cons of the reified values,		- for all other objects, answers the object itself ' id 'a3817c16-1ffd-4020-b835-f011e85a7e64' date '20 January 2015' time '11:43:44.227023 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.5' message 'Rename #unifyWith*:using: to #unifyWith*:on:' id 'a1d844f8-0ee5-4c4f-9d66-92b19cc972b7' date '20 January 2015' time '10:52:28.48299 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.4' message 'Categorize test methods and add some documentation' id 'a3731cfc-809e-4212-b226-bc5c281013c1' date '20 January 2015' time '10:48:50.014999 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.3' message 'Improve conses hash and minor refactoringsAdd a #size message to MKCons, and use the cons chain size to compute the hash.Remove empty test (a leftover of a manual rename) and source format MKCons>>unifyWithCons:using:' id '742685cd-e2bc-45d3-8707-a8d9772f996f' date '20 January 2015' time '3:24:05.053545 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.2' message 'Add conses and full unification implementationThis version finishes the implementation of unification. Now MicroKanren fully supports three kinds of elements:  - Variables, that act as placeholders for values. Will unify with elements of any kind.  - Conses, the only compound object supported by MicroKanren, unifies with variables and other conses.  - Objects, an arbitrary Pharo object (with the exception of vars and conses). Unify with variables and other objects (only if equal).' id 'f5d4cc29-2ad2-49d5-a5c7-4c45db8925f2' date '19 January 2015' time '11:26:53.116528 pm' author 'AdolfoPerezAlvarez' ancestors ((name 'MicroKanren-AdolfoPerezAlvarez.1' message 'Implement unification of variables and atomic objects. ' id '906526b8-226b-4871-b5ef-6c9a7c6c5b9f' date '18 January 2015' time '4:24:09.219532 pm' author 'AdolfoPerezAlvarez' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'MicroKanren-AdolfoPerezAlvarez.9' message 'Implement the unification goal' id '2f44a558-8870-4353-9576-e0f7063fedcc' date '29 January 2015' time '10:50:57.567817 pm' author 'AdolfoPerezAlvarez' ancestors ((id '38797def-7a1c-4b2c-bc2e-a89e0d08f07f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())